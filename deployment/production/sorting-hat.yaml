---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sorting-hat-step-ztf
  namespace: pipeline
spec:
  selector:
    matchLabels:
      app: sorting-hat-step-ztf
  template:
    metadata:
      labels:
        app: sorting-hat-step-ztf
    spec:
      affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                  - matchExpressions:
                    - key: eks.amazonaws.com/nodegroup
                      operator: In
                      values:
                          - production-pipeline
      containers:
        - env:
            - name: CONSUME_MESSAGES
              value: "500"
            - name: CONSUMER_GROUP_ID
              value: sorting-hat-step-ztf
            - name: CONSUMER_SERVER
              valueFrom:
                secretKeyRef:
                  name: kafka
                  key: consumer-server
            - name: PRODUCER_SERVER
              valueFrom:
                secretKeyRef:
                  name: kafka
                  key: producer-server
            - name: CONSUMER_TOPICS
              value: "^ztf*"
            - name: PRODUCER_TOPIC
              value: sorting-hat-ztf
            - name: METRICS_HOST
              valueFrom:
                secretKeyRef:
                  name: metrics
                  key: host
            - name: METRICS_TOPIC
              valueFrom:
                secretKeyRef:
                  name: metrics
                  key: topic
            - name: MONGODB_SECRET_NAME
              value: mongodb-alerts-production
          name: sorting-hat-step-ztf
          image: ghcr.io/alercebroker/sorting_hat_step:latest
          resources:
            requests:
              memory: 256M
              cpu: 250m
      restartPolicy: Always
      imagePullSecrets:
        - name: image-pull-access

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sorting-hat-step-atlas
  namespace: pipeline
spec:
  selector:
    matchLabels:
      app: sorting-hat-step-atlas
  template:
    metadata:
      labels:
        app: sorting-hat-step-atlas
    spec:
      affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                  - matchExpressions:
                    - key: eks.amazonaws.com/nodegroup
                      operator: In
                      values:
                          - production-pipeline
      containers:
        - env:
            - name: CONSUME_MESSAGES
              value: "500"
            - name: CONSUMER_GROUP_ID
              value: sorting-hat-step-atlas
            - name: CONSUMER_SERVER
              valueFrom:
                secretKeyRef:
                  name: kafka
                  key: consumer-server
            - name: PRODUCER_SERVER
              valueFrom:
                secretKeyRef:
                  name: kafka
                  key: producer-server
            - name: CONSUMER_TOPICS
              value: "^ATLAS*"
            - name: PRODUCER_TOPIC
              value: sorting-hat-atlas
            - name: METRICS_HOST
              valueFrom:
                secretKeyRef:
                  name: metrics
                  key: host
            - name: METRICS_TOPIC
              valueFrom:
                secretKeyRef:
                  name: metrics
                  key: topic
            - name: MONGODB_SECRET_NAME
              value: mongodb-alerts-staging
          name: sorting-hat-step-atlas
          image: ghcr.io/alercebroker/sorting_hat_step:latest
          resources:
            requests:
              memory: 256M
              cpu: 250m
      restartPolicy: Always
      imagePullSecrets:
        - name: image-pull-access
