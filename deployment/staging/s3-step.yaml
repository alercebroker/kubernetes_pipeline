apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3-step-ztf
  namespace: pipeline
spec:
  selector:
    matchLabels:
      app: s3-step-ztf
  template:
    metadata:
      labels:
        app: s3-step-ztf
    spec:
      affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                  - matchExpressions:
                    - key: eks.amazonaws.com/nodegroup
                      operator: In
                      values:
                          - staging-pipeline
      containers:
        - env:
          - name: CONSUMER_SERVER
            valueFrom:
              secretKeyRef:
                name: kafka
                key: consumer-server
          - name: CONSUMER_TOPICS
            value: "^ztf."
          - name: CONSUMER_GROUP_ID
            value: s3_step_ztf
          - name: METRICS_HOST
            valueFrom:
              secretKeyRef:
                name: metrics
                key: host
          - name: METRICS_TOPIC
            valueFrom:
              secretKeyRef:
                name: metrics
                key: topic
          - name: STEP_VERSION
            value: s3_step_1.2.0
          - name: STEP_ID
            value: s3_step
          - name: STEP_NAME
            value: s3_step
          - name: BUCKET_NAME
            valueFrom:
              secretKeyRef:
                name: s3
                key: single-avro
          - name: REGION_NAME
            value: us-east-1
          name: s3-step
          image: ghcr.io/alercebroker/s3_step:rc
          imagePullPolicy: Always
          resources:
            requests:
              memory: 200M
              cpu: 300m
      restartPolicy: Always
      imagePullSecrets:
        - name: image-pull-access

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3-step-atlas
  namespace: pipeline
spec:
  selector:
    matchLabels:
      app: s3-step-atlas
  template:
    metadata:
      labels:
        app: s3-step-atlas
    spec:
      affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                  - matchExpressions:
                    - key: eks.amazonaws.com/nodegroup
                      operator: In
                      values:
                          - staging-pipeline
      containers:
        - env:
          - name: CONSUMER_SERVER
            valueFrom:
              secretKeyRef:
                name: kafka
                key: consumer-server
          - name: CONSUMER_TOPICS
            value: "^ATLAS."
          - name: CONSUMER_GROUP_ID
            value: s3_step_atlas
          - name: METRICS_HOST
            valueFrom:
              secretKeyRef:
                name: metrics
                key: host
          - name: METRICS_TOPIC
            valueFrom:
              secretKeyRef:
                name: metrics
                key: topic
          - name: STEP_VERSION
            value: s3_step_1.2.0
          - name: STEP_ID
            value: s3_step
          - name: STEP_NAME
            value: s3_step
          - name: BUCKET_NAME
            valueFrom:
              secretKeyRef:
                name: s3
                key: single-avro
          - name: REGION_NAME
            value: us-east-1
          name: s3-step
          image: ghcr.io/alercebroker/s3_step:rc
          imagePullPolicy: Always
          resources:
            requests:
              memory: 200M
              cpu: 300m
      restartPolicy: Always
      imagePullSecrets:
        - name: image-pull-access
