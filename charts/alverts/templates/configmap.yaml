apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka
  namespace: {{ .Values.namespace }}
data:
  consumer-server: {{ .Values.configmap.kafka.consumerServer }}
  consumer-group-format: {{ .Values.configmap.kafka.consumerGroupFormat }}
  source-topic-format: {{ .Values.configmap.kafka.sourceTopicFormat }}
  source-topic-date-format: "'{{ .Values.configmap.kafka.sourceTopicDateFormat }}'"
  consumer-group-s3: {{ .Values.configmap.kafka.consumerGroupS3 }}
  consumer-group-archive: {{ .Values.configmap.kafka.consumerGroupArchive }}
  consumer-group-watchlist: {{ .Values.configmap.kafka.consumerGroupWatchlist }}
  consumer-group-stamp: {{ .Values.configmap.kafka.consumerGroupStamp }}
  consumer-group-sortinghat: {{ .Values.configmap.kafka.consumerGroupSortinghat }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alerts-database
  namespace: {{ .Values.namespace }}
data:
  host: {{ .Values.configmap.alertsDb.host }}
  port: "{{ .Values.configmap.alertsDb.port }}"
  name: {{ .Values.configmap.alertsDb.name }}
  detections-id-field: {{ .Values.configmap.alertsDb.detectionsIdField }}
  detections-table: {{ .Values.configmap.alertsDb.detectionsTable }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: schedule
  namespace: {{ .Values.namespace }}
data:
  tz: {{ .Values.configmap.schedule.tz }}
  lag-report: "{{ .Values.configmap.schedule.lagReport }}"
  detections-report: "{{ .Values.configmap.schedule.detectionsReport }}"
  stamp-report: "{{ .Values.configmap.schedule.stampReport }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: settings
  namespace: {{ .Values.namespace }}
data:
  settings.yml: |
    ---
    slack_bot:
      stage: ${SLACK_BOT_STAGE}
      log_level: ${SLACK_BOT_LOG_LEVEL}
      slack_credentials:
        token: ${SLACK_BOT_TOKEN}
      reports:
        - name: stamp_classifications_report
          database:
            - host: ${DB_HOST_PROD}
              database: ${DB_DATABASE_PROD}
              user: ${DB_USER_PROD}
              password: ${DB_PASSWORD_PROD}
              port: ${DB_PORT_PROD}
              table_names: [probability, object]
              mjd_name: firstmjd
      schedule:
        - period: every_day
          report: stamp_classifications_report
          channels:
            - test-bots
          times:
            - '${SCHEDULE_STAMP_REPORT_TIME}'